# Ruby CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-ruby/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: circleci/ruby:2.6.3-node-browsers
        environment:
          BUNDLER_VERSION: 2.0.2
          PG_HOST: 127.0.0.1
          PG_USER: ubuntu
          RAILS_ENV: test
          RACK_ENV: test

      - image: circleci/postgres:10.4-alpine-ram
        environment:
          POSTGRES_USER: ubuntu
          POSTGRES_DB: ubuntu
          POSTGRES_TEST_DB: ubuntu_test
          POSTGRES_PORT: 5432

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "Gemfile.lock" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
      - run:
            name: Configure Bundler
            command: |
              echo 'export BUNDLER_VERSION=$(cat Gemfile.lock | tail -1 | tr -d " ")' >> $BASH_ENV
              source $BASH_ENV
              gem install bundler
      - run:
          name: install dependencies
          command: |
            bundle install --jobs=4 --retry=3 --path vendor/bundle

      - run: sudo apt install -y postgresql-client
      - run: sudo apt-get install postgresql-client-10.3 || true

      - save_cache:
          paths:
            - ./vendor/bundle
          key: v1-dependencies-{{ checksum "Gemfile.lock" }}

      # Database setup
      - run:
          name: Set up DB
          command: bundle exec rake db:create db:schema:load RAILS_ENV=test
          environment:
            DATABASE_URL: "postgres://ubuntu@localhost:5432/ubuntu_test"

      # run tests!
      - run:
          name: run tests
          command: |
            mkdir /tmp/test-results
            TEST_FILES="$(circleci tests glob "spec/**/*_spec.rb" | \
              circleci tests split --split-by=timings)"

            bundle exec rspec \
              --format progress \
              --out /tmp/test-results/rspec.xml \
              --format progress \
              $TEST_FILES

      # collect reports
      - store_test_results:
          path: /tmp/test-results
      - store_artifacts:
          path: /tmp/test-results
          destination: test-results
  deploy:
      docker:
        - image: buildpack-deps:trusty
      steps:
        - checkout
        - run:
            name: Deploy Master to Heroku
            command: |
              git push https://heroku:$HEROKU_API_KEY@git.heroku.com/$HEROKU_APP_NAME.git master

workflows:
  version: 2
  build-deploy:
    jobs:
      - build
      - deploy:
          requires:
            - build
          filters:
            branches:
              only: master
